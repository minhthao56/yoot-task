{"version":3,"sources":["routers/PrivateRouter.tsx","services/api/axiosAuth.ts","services/api/apiLogin.ts","services/api/axiosClient.ts","pages/HomePage/HomePage.tsx","assets/images/logoYoot.png","components/Sidebar/Sidebar.tsx","layouts/MainLayout/MainLayout.tsx","routers/index.tsx","App.tsx","redux/slice/appSlice/demoSlice.ts","redux/rootReducer/index.ts","redux/store/index.ts","serviceWorker.ts","index.tsx"],"names":["PrivateRouter","Component","component","Layout","layout","exact","path","header","footer","render","props","axiosAuth","axios","create","baseURL","headers","Authorization","process","interceptors","response","use","res","err","apiLogin","params","post","bashUrl","token","localStorage","getItem","axiosClient","HomePage","useEffect","Email","Password","then","data","setItem","Content","Token","className","sidebarItem","display_name","route","icon","FiMonitor","RiBookMarkFill","RiPencilRulerFill","sidebarItemNav","RiCommunityFill","FaShippingFast","FaTelegramPlane","IoCube","FiActivity","AiOutlineGlobal","RiBriefcase4Fill","Sidebar","src","Logo","alt","map","item","index","Icon","to","id","MainLayout","children","Routers","App","demoSlice","createSlice","name","initialState","isOpen","reducers","doOpenModal","state","doCloseModal","actions","reducer","rootReducer","combineReducers","store","configureStore","useSelector","Boolean","window","location","hostname","match","ReactDOM","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.84ab5368.chunk.js","sourcesContent":["import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nexport const PrivateRouter: React.FC<IPrivateRouter> = ({\n  component: Component,\n  layout: Layout,\n  exact,\n  path,\n  header: Header,\n  footer: Footer,\n}) => {\n  return (\n    <Route\n      exact={exact}\n      path={path}\n      render={(props) => {\n        return (\n          <Layout>\n            <Component {...props} />\n          </Layout>\n        );\n      }}\n    />\n  );\n};\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\n\nconst baseURL = process.env.REACT_APP_URL_TASK;\nconst token = process.env.REACT_APP_TOKEN_LOGIN;\n\nconst axiosAuth = axios.create({\n  baseURL: baseURL + \"api/\",\n  headers: {\n    \"content-type\": \"application/json\",\n    Authorization: token,\n  },\n});\n\naxiosAuth.interceptors.response.use(\n  (res: AxiosResponse) => {\n    return res;\n  },\n  (err: AxiosError) => {\n    throw err;\n  }\n);\n\nexport default axiosAuth;\n","import axiosAuth from \"./axiosAuth\";\n\nconst bashUrl = \"Login/\";\n\nexport const apiLogin = {\n  login: (params: IParamsLogin) => {\n    const url = bashUrl + \"Index\";\n    return axiosAuth.post(url, params);\n  },\n};\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\n\nconst baseURL = process.env.REACT_APP_URL_TASK;\nconst token = localStorage.getItem(\"token\");\n\nconst axiosClient = axios.create({\n  baseURL: baseURL + \"api/\",\n  headers: {\n    \"content-type\": \"application/json\",\n    Authorization: token,\n  },\n});\naxiosClient.interceptors.response.use(\n  (res: AxiosResponse) => {\n    return res;\n  },\n  (err: AxiosError) => {\n    throw err;\n  }\n);\nexport default axiosClient;\n","import { useEffect } from \"react\";\nimport { apiLogin } from \"../../services\";\nimport \"./HomePage.scss\";\nexport const HomePage = () => {\n  useEffect(() => {\n    apiLogin\n      .login({ Email: \"thao.nguyen@yoot.vn\", Password: \"123456789\" })\n      .then((res) => {\n        const data: IResLogin = res.data;\n        localStorage.setItem(\"token\", data.Content.Token);\n      });\n  }, []);\n\n  return <div className=\"home-page\">HomePage</div>;\n};\n","export default __webpack_public_path__ + \"static/media/logoYoot.441d2bdd.png\";","import { Link } from \"react-router-dom\";\r\nimport { FiMonitor, FiActivity } from \"react-icons/fi\";\r\nimport { FaShippingFast, FaTelegramPlane } from \"react-icons/fa\";\r\nimport {\r\n  RiBookMarkFill,\r\n  RiPencilRulerFill,\r\n  RiCommunityFill,\r\n  RiBriefcase4Fill,\r\n} from \"react-icons/ri\";\r\nimport { AiOutlineGlobal } from \"react-icons/ai\";\r\nimport { IoCube } from \"react-icons/io5\";\r\nimport \"./Sidebar.scss\";\r\nimport Logo from \"../../assets/images/logoYoot.png\";\r\nconst sidebarItem = [\r\n  {\r\n    display_name: \"Trang chủ\",\r\n    route: \"/\",\r\n    icon: FiMonitor,\r\n  },\r\n  {\r\n    display_name: \"task\",\r\n    route: \"/task\",\r\n    icon: RiBookMarkFill,\r\n  },\r\n  {\r\n    display_name: \"kế hoạch\",\r\n    route: \"/plan\",\r\n    icon: RiPencilRulerFill,\r\n  },\r\n];\r\nconst sidebarItemNav = [\r\n  {\r\n    display_name: \"dự án\",\r\n    route: \"/projects\",\r\n    icon: RiCommunityFill,\r\n  },\r\n  {\r\n    display_name: \"quy trình\",\r\n    route: \"/status\",\r\n    icon: FaShippingFast,\r\n  },\r\n  {\r\n    display_name: \"tiêu chí\",\r\n    route: \"/plan\",\r\n    icon: FaTelegramPlane,\r\n  },\r\n  {\r\n    display_name: \"version\",\r\n    route: \"/version\",\r\n    icon: IoCube,\r\n  },\r\n  {\r\n    display_name: \"mức độ\",\r\n    route: \"/plan\",\r\n    icon: FiActivity,\r\n  },\r\n  {\r\n    display_name: \"môi trường\",\r\n    route: \"/env\",\r\n    icon: AiOutlineGlobal,\r\n  },\r\n  {\r\n    display_name: \"thiết bị\",\r\n    route: \"/devices\",\r\n    icon: RiBriefcase4Fill,\r\n  },\r\n];\r\nexport const Sidebar = () => {\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar-header\">\r\n        <div className=\"sidebar__logo\">\r\n          <img src={Logo} alt=\"logo yoot task\" className=\"logo-img\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar-body\">\r\n        <ul className=\"sidebar-nav\">\r\n          {sidebarItem.map((item, index) => {\r\n            const { icon: Icon, display_name, route } = item;\r\n            return (\r\n              <Link to={route} key={index}>\r\n                <li className=\"sidebar__item\">\r\n                  <div className=\"sidebar__item-inner\">\r\n                    <Icon className=\"sidebar__item-inner-icon\" />\r\n                    <span>{display_name}</span>\r\n                  </div>\r\n                </li>\r\n              </Link>\r\n            );\r\n          })}\r\n        </ul>\r\n        <hr className=\"lines\" />\r\n        <h6 className=\"sidebar-heading\">Dự án</h6>\r\n        <ul className=\"sidebar-nav\">\r\n          {sidebarItemNav.map((item, index) => {\r\n            const { icon: Icon, display_name, route } = item;\r\n            return (\r\n              <Link to={route} key={index}>\r\n                <li className=\"sidebar__item\">\r\n                  <div className=\"sidebar__item-inner\">\r\n                    <Icon\r\n                      className=\"sidebar__item-inner-icon\"\r\n                      id=\"icon-purple\"\r\n                    />\r\n                    <span>{display_name}</span>\r\n                  </div>\r\n                </li>\r\n              </Link>\r\n            );\r\n          })}\r\n        </ul>\r\n        <hr className=\"lines\" />\r\n        <h6 className=\"sidebar-heading\">Tài khoản</h6>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { FC } from \"react\";\nimport { Sidebar } from \"../../components\";\nimport \"./MainLayout.scss\";\n\nexport const MainLayout: FC = ({ children }) => {\n  return (\n    <div className=\"main-layout\">\n      <Sidebar />\n      <div className=\"main-layout__bg\" />\n      <div className=\"main-layout__content\">{children}</div>\n    </div>\n  );\n};\n","import { Switch } from \"react-router-dom\";\nimport { PrivateRouter } from \"./PrivateRouter\";\nimport { HomePage } from \"../pages\";\nimport { BlankLayout, MainLayout } from \"../layouts\";\n\nexport const Routers = () => {\n  return (\n    <Switch>\n      <PrivateRouter exact component={HomePage} layout={MainLayout} path=\"/\" />\n    </Switch>\n  );\n};\n","import \"./App.scss\";\nimport { Routers } from \"./routers\";\n\nfunction App() {\n  return <Routers />;\n}\n\nexport default App;\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\ntype TTnitialState = {\r\n  isOpen: boolean;\r\n};\r\n\r\nconst initialState = {\r\n  isOpen: false,\r\n} as TTnitialState;\r\n\r\nexport const demoSlice = createSlice({\r\n    name: 'demo',\r\n    initialState: initialState,\r\n    reducers: {\r\n      doOpenModal(state) {\r\n        state.isOpen = true;\r\n      },\r\n      doCloseModal(state) {\r\n        state.isOpen = false;\r\n      },\r\n    },\r\n});\r\n\r\nconst { actions, reducer } = demoSlice;\r\nexport const { doOpenModal, doCloseModal } = actions;\r\nexport default reducer;\r\n","import { combineReducers } from \"@reduxjs/toolkit\";\r\nimport demoSlice from \"../slice/appSlice/demoSlice\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  demoSlice,\r\n});\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\r\nimport { rootReducer } from \"../rootReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n\r\nexport default store;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/yoot-task\">\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}